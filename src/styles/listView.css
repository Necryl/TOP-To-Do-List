.listView {
    --bgCol: rgb(39, 55, 70);
    background-color: var(--bgCol);
    display: grid;
    align-content: start;
    gap: 15px;

    padding: 10px;

    position: relative;
    z-index: 1;
}

.listView.hide {
    display: none;
}

.listView .title-wrapper {
    display: grid;
    grid-template-columns: auto 1fr;
    align-items: center;
}

.listView.triple #open-menu {
    display: none;
}

.listView #open-menu {
    max-height: 2.5rem;
}

.listView .title {
    font-size: 2.5rem;
}

.listView.triple .title {
    display: none;
}

.listView .listNameWrapper {
    display: grid;
    grid-template-columns: 1fr auto;
    gap: 10px;
}

.listView .listNameWrapper .newBtn {
    background-color: rgb(49, 71, 100);
    color: rgba(255, 255, 255, 0.788);
    border: 1px solid rgba(114, 151, 207, 0.281);
    border-radius: 5px;
    font-size: 0.9rem;
    padding: 6px 15px;
    align-self: center;

    transition: 100ms;
}

.listView .listNameWrapper .newBtn:hover {
    border-color: rgba(255, 255, 255, 0.473);
    background-color: rgba(95, 149, 170, 0.527);
}
.listView .listNameWrapper .newBtn:active {
    background-color: white;
}

#listName {
    background-color: transparent;
    border: none;
    font-size: 1.75rem;
    border-bottom: 1px solid transparent;
    width: 100%;
    min-width: min-content;
}
#listName:focus {
    outline: none;
    border-bottom-color: rgba(255, 255, 255, 0.781);
    border-radius: 0%;
}

.listView .options {
    display: grid;
    grid-auto-flow: column;
    justify-content: space-between;
    gap: 1ch;
}

.listView .options, .listView .options * {
    overflow: visible;
}

.listView .options :is(.sort, .show) {
    display: grid;
    grid-auto-flow: column;
    align-items: center;
    gap: 0.5ch;
}

.listView .sort span {
    min-width: max-content;
}

.listView :is(.sort, .show) input {
    appearance: none;
    -moz-appearance: none;
    -webkit-appearance: none;
}
.listView :is(.sort, .show) input::before {
    background-color: transparent;
    border: 1px solid white;
    padding: 3px 5px;
    border-radius: 5px;
}

.listView :is(#sortPriority, #showPriority)::before {
    content: 'Priority';
}
.listView :is(#sortDate, #showDate)::before {
    content: 'Date';
}
.listView :is(.sort, .show) input:hover::before {
    background-color: rgba(255, 255, 255, 0.096);
}
.listView :is(.sort, .show) input:checked::before {
    background-color: white;
    color: black;
}

.listView ul {
    display: grid;
    gap: 7px;
    margin-bottom: 10px;
}

.listView ul li {
    display: grid;
    grid-template-columns: auto 1fr;
    grid-auto-flow: column;
    justify-content: start;
    gap: 10px;
    border: 1px solid transparent;
    border-radius: 4px;
    padding: 3px 10px;
    transition: 250ms;
    background-color: rgba(129, 205, 255, 0.123);
}
.listView ul li.note {
    grid-template-columns: 1fr;
}
.listView ul li.selected {
    border-color: rgba(255, 255, 255, 0.623);
}

.listView.single ul li *:not(input[type='checkbox']) {
    pointer-events: none;
}

.listView ul li:hover {
    border-color: rgba(255, 255, 255, 0.308);
}
.listView ul li:focus-within {
    border-bottom-color: white;
}

.listView ul li * {
    background-color: transparent;
    border: none;
    font-size: 1rem;
}
.listView ul li *:focus {
    outline: none;
}

.listView ul li input[type='checkbox'] {
    -webkit-appearance: none;
    appearance: none;
    --size: 18px;
    width: var(--size);
    height: var(--size);
    align-self: center;

    --col: rgba(255, 255, 255, 0.233);
    border: 2px solid var(--col);
    border-radius: 5px;

    position: relative;
    overflow: visible;

    transition: 200ms;
}
.listView ul li input[type='checkbox']:hover {
    --col: rgba(255, 255, 255, 0.479);
}

.listView ul li input[type='checkbox']::before {
    position: absolute;
    content: '';
    color: rgb(143, 168, 192);
    translate: -3px -12px;
}

.listView .completedItems li input[type='checkbox']::before {
    color: rgb(134, 139, 141);
}

.listView ul li input[type='checkbox']:checked::before {
    content: '\2713';
    font-size: 30px;
}

.listView ul li input[type='text'] {
    padding: 5px 0px;
    width: 100%;
    min-width: 5ch;
    text-overflow: ellipsis;
}

.listView ul li select {
    border-radius: 3px;
}

.listView ul li select:focus {
    background-color: var(--bgCol);
}

.listView ul li input[type='date'] {
    font-family: inherit;
    text-align: end;
    width: 14ch;
    position: relative;
}
.listView ul li input[type='date'].noDate:not(:hover) {
    animation: fadeOut 100ms ease-out forwards;
    visibility: hidden;
}

.listView ul li input[type='date'].noDate:hover {
    visibility: visible;
    animation: fadeIn 100ms ease-out forwards;
}

.listView ul li input[type='date'].noDate:not(:hover)::before {
    content: 'No due date';
    position: absolute;
    right: 0%;
    animation: fadeIn 100ms ease-out forwards;
    visibility: visible;
    color: white;
}

.listView ul li input[type='date'].noDate:hover::before {
    animation: fadeOut 100ms ease-out forwards;
    visibility: hidden;
    color: transparent;
}

@keyframes fadeIn {
    0% {
        color: rgba(255, 255, 255, 0);
        visibility: visible;
    }
    99% {
        color: white;
    }
    100% {
        color: white;
    }
}
@keyframes fadeOut {
    0% {
        visibility: visible;
        color: white;
    }
    99% {
        visibility: visible;
        color: rgba(255, 255, 255, 0);
    }
    100% {
        visibility: hidden;
        color: rgba(255, 255, 255, 0);
    }
}

.completedTitle-wrapper {
    position: relative;

    display: grid;
    align-items: center;

    overflow: visible;
}

#completedTitle {
    width: 100%;
    padding: 7px 0px;
    border-radius: 6px;
    background-color: transparent;
    text-align: start;
    font-size: 1.2rem;
    --col: white;
    color: var(--col);
    border: none;
    transition: 300ms;

}
#completedTitle::after {
    display: block;
    margin-top: 3px;
    content: '';
    background-color: rgba(255, 255, 255, 0.795);
    height: 1px;
    
    transition: 500ms;
    width: 0%;
}
#completedTitle:hover {
    --col: rgb(118, 179, 248);
}
#completedTitle:active {
    --col: rgb(153, 226, 226);
}
#completedTitle:hover::after {
    width: 100%;
    background-color: var(--col);
}

.listView .completedTitle-wrapper #removeCompleted {
    position: absolute;
    right: 0%;
    translate: 0px -3px;
    padding: 2px 8px;
    background-color: rgb(84, 72, 128);
    color: rgb(240, 198, 248);
    border: 1px solid rgb(145, 174, 187);
    border-radius: 3px;
    font-size: 1rem;

    transition: 100ms;
}
.listView .completedTitle-wrapper #removeCompleted:hover {
    border-color: rgb(120, 143, 161);
    background-color: rgb(167, 42, 42);
}
.listView .completedTitle-wrapper #removeCompleted:active {
    background-color: white;
    color: black;
}

.listView .completedItems li {
    background-color: rgba(31, 36, 44, 0.425);
    color: rgba(255, 255, 255, 0.637);
}

.listView .completedItems li input[type='text'] {
    text-decoration: line-through;
    color: inherit;
}

.listView.hidePriority select {
    display: none;
}
.listView.hideDate input[type='date'] {
    display: none;
}

.listView .listItems .task:not(.task.checked) {
    animation: welcome-to-unchecked 200ms ease-out;
    animation-iteration-count: 1;
}
@keyframes welcome-to-unchecked {
    0% {
        max-height: 0em;
        opacity: 0%;
    }
    50% {
        max-height: 4em;
    }
    100% {
        opacity: 100%;
    }
}

.listView .listItems .task.checked {
    animation: move-to-completed 200ms;
}
@keyframes move-to-completed {
    50% {
        max-height: 4em;
    }
    100% {
        opacity: 0%;
        max-height: 0em;
    }
}

.listView .completedItems .task.checked {
    animation: welcome-to-checked 200ms ease-out;
}
@keyframes welcome-to-checked {
    0% {
        opacity: 0%;
        max-height: 0em;
    }
    50% {
        max-height: 4em;
    }
    100% {
        opacity: 100%;
    }
}

.listView .completedItems .task:not(.task.checked) {
    animation: move-to-unchecked 200ms;
}
@keyframes move-to-unchecked {
    50% {
        max-height: 4em;
    }
    100% {
        opacity: 0%;
        max-height: 0em;
    }
}

.listView .completedItems.collapse {
    animation: completed-collapse 300ms ease-out forwards;
}
@keyframes completed-collapse {
    100% {
        transform: translateY(-3rem);
        visibility: hidden;
        opacity: 0%;
    }
}
.listView .completedItems:not(.collapse) {
    animation: completed-expand 300ms ease-out forwards;
}
@keyframes completed-expand {
    0% {
        transform: translateY(-3rem);
        visibility: hidden;
        opacity: 0%;
    }
    100% {
        transform: translateY(0rem);
        opacity: 100%;
    }
}